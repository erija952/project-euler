#!/usr/bin/python
#The sequence of triangle numbers is generated by adding the natural numbers.
# So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
# The first ten terms would be:
#
#1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
#
#Let us list the factors of the first seven triangle numbers:
#
#We can see that 28 is the first triangle number to have over five divisors.
#What is the value of the first triangle number to have over five hundred divisors
#
#1 - 1
#3 - 1+2
#6 - 1+2+3
#10- 1+2+3+4       delbart med 1,2,5,10
#15- 1+2+3+4+5     delbart 1,3,5,15
#21- 1+2+3+4+5+6   delbart med 1,3,7,21
#     1: 1
#     3: 1,3
#     6: 1,2,3,6
#    10: 1,2,5,10
#    15: 1,3,5,15
#    21: 1,3,7,21
#    28: 1,2,4,7,14,28


def count_divisors(num):
    divisors = 0
    for i in range(1,num):
        if num% i == 0:
            divisors +=1
    return divisors

max_divisors = 500
num_divisors = 0
current_divisor = 0
i=1
while True:
    s= sum(range(1,i+1))
    num_divisors = count_divisors(s);
    if num_divisors >= max_divisors:
        print "Enough divisors"
        sums=s
        break
    else:
        if num_divisors > current_divisor:
            current_divisor = num_divisors
            print "Current max divisor is " +str(num_divisors) + " and i is " + str(i) + "and s is " + str(s)
        i = i+1

    
print str(max_divisors) + " found at i="  + str(i) + " and s is " + str(sums)           
